// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using notetakingapi.Data;

#nullable disable

namespace notetakingapi.Migrations
{
    [DbContext(typeof(NoteTakingContext))]
    [Migration("20251024032603_user data added")]
    partial class userdataadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("notetakingapi.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Hello, World!",
                            CreatedAt = "10/24/2025 12:00:00 AM",
                            LastUpdate = "10/24/2025 12:00:00 AM"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Hello, Akito!",
                            CreatedAt = "10/24/2025 12:00:00 AM",
                            LastUpdate = "10/24/2025 12:00:00 AM"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Hello, Seven!",
                            CreatedAt = "10/24/2025 12:00:00 AM",
                            LastUpdate = "10/24/2025 12:00:00 AM"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Hello!",
                            CreatedAt = "10/24/2025 12:00:00 AM",
                            LastUpdate = "10/24/2025 12:00:00 AM"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Hello, just Hello!",
                            CreatedAt = "10/24/2025 12:00:00 AM",
                            LastUpdate = "10/24/2025 12:00:00 AM"
                        });
                });

            modelBuilder.Entity("notetakingapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "",
                            Password = "admin",
                            Username = "Akito"
                        },
                        new
                        {
                            Id = 2,
                            Email = "",
                            Password = "princess",
                            Username = "Yusa"
                        },
                        new
                        {
                            Id = 3,
                            Email = "",
                            Password = "alternative",
                            Username = "Seven"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
